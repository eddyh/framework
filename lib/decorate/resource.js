"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resource = resource;

var _route = require("./route");

function resource({ singular } = { singular: false }) {
  const single = [["show", "GET", "/"], ["create", "POST", "/"], ["create", "PUT", "/"], ["update", "PATCH", "/"], ["destroy", "DELETE", "/"], ["new", "GET", "/new"], ["edit", "GET", "/edit"]];

  const plural = [["index", "GET", "/"], ["show", "GET", "/{id}"], ["create", "POST", "/"], ["create", "PUT", "/"], ["update", "PATCH", "/{id}"], ["destroy", "DELETE", "/{id}"], ["new", "GET", "/new"], ["edit", "GET", "/{id}/edit"]];

  const map = singular ? single : plural;

  return object => {
    for (const [name, method, pattern] of map) {
      let descriptor = Object.getOwnPropertyDescriptor(object.prototype, name);
      if (descriptor) {
        const decorate = (0, _route.route)(pattern, { method });
        descriptor = decorate(object.prototype, name, descriptor);
        Object.defineProperty(object.prototype, name, descriptor);
      }
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZWNvcmF0ZS9yZXNvdXJjZS5qcyJdLCJuYW1lcyI6WyJyZXNvdXJjZSIsInNpbmd1bGFyIiwic2luZ2xlIiwicGx1cmFsIiwibWFwIiwib2JqZWN0IiwibmFtZSIsIm1ldGhvZCIsInBhdHRlcm4iLCJkZXNjcmlwdG9yIiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwicHJvdG90eXBlIiwiZGVjb3JhdGUiLCJkZWZpbmVQcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFPZ0JBLFEsR0FBQUEsUTs7QUFOaEI7O0FBTU8sU0FBU0EsUUFBVCxDQUFrQixFQUFDQyxRQUFELEtBQThCLEVBQUNBLFVBQVUsS0FBWCxFQUFoRCxFQUE4RTtBQUNuRixRQUFNQyxTQUFTLENBQ2IsQ0FBQyxNQUFELEVBQVMsS0FBVCxFQUFnQixHQUFoQixDQURhLEVBRWIsQ0FBQyxRQUFELEVBQVcsTUFBWCxFQUFtQixHQUFuQixDQUZhLEVBR2IsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixHQUFsQixDQUhhLEVBSWIsQ0FBQyxRQUFELEVBQVcsT0FBWCxFQUFvQixHQUFwQixDQUphLEVBS2IsQ0FBQyxTQUFELEVBQVksUUFBWixFQUFzQixHQUF0QixDQUxhLEVBT2IsQ0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLE1BQWYsQ0FQYSxFQVFiLENBQUMsTUFBRCxFQUFTLEtBQVQsRUFBZ0IsT0FBaEIsQ0FSYSxDQUFmOztBQVdBLFFBQU1DLFNBQVMsQ0FDYixDQUFDLE9BQUQsRUFBVSxLQUFWLEVBQWlCLEdBQWpCLENBRGEsRUFFYixDQUFDLE1BQUQsRUFBUyxLQUFULEVBQWdCLE9BQWhCLENBRmEsRUFHYixDQUFDLFFBQUQsRUFBVyxNQUFYLEVBQW1CLEdBQW5CLENBSGEsRUFJYixDQUFDLFFBQUQsRUFBVyxLQUFYLEVBQWtCLEdBQWxCLENBSmEsRUFLYixDQUFDLFFBQUQsRUFBVyxPQUFYLEVBQW9CLE9BQXBCLENBTGEsRUFNYixDQUFDLFNBQUQsRUFBWSxRQUFaLEVBQXNCLE9BQXRCLENBTmEsRUFRYixDQUFDLEtBQUQsRUFBUSxLQUFSLEVBQWUsTUFBZixDQVJhLEVBU2IsQ0FBQyxNQUFELEVBQVMsS0FBVCxFQUFnQixZQUFoQixDQVRhLENBQWY7O0FBWUEsUUFBTUMsTUFBTUgsV0FBV0MsTUFBWCxHQUFvQkMsTUFBaEM7O0FBRUEsU0FBUUUsTUFBRCxJQUFvQjtBQUN6QixTQUFLLE1BQU0sQ0FBQ0MsSUFBRCxFQUFPQyxNQUFQLEVBQWVDLE9BQWYsQ0FBWCxJQUFzQ0osR0FBdEMsRUFBMkM7QUFDekMsVUFBSUssYUFBYUMsT0FBT0Msd0JBQVAsQ0FBZ0NOLE9BQU9PLFNBQXZDLEVBQWtETixJQUFsRCxDQUFqQjtBQUNBLFVBQUlHLFVBQUosRUFBZ0I7QUFDZCxjQUFNSSxXQUFXLGtCQUFNTCxPQUFOLEVBQWUsRUFBQ0QsTUFBRCxFQUFmLENBQWpCO0FBQ0FFLHFCQUFhSSxTQUFTUixPQUFPTyxTQUFoQixFQUEyQk4sSUFBM0IsRUFBaUNHLFVBQWpDLENBQWI7QUFDQUMsZUFBT0ksY0FBUCxDQUFzQlQsT0FBT08sU0FBN0IsRUFBd0NOLElBQXhDLEVBQThDRyxVQUE5QztBQUNEO0FBQ0Y7QUFDRixHQVREO0FBVUQiLCJmaWxlIjoicmVzb3VyY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBAZmxvdyAqL1xuaW1wb3J0IHtyb3V0ZX0gZnJvbSBcIi4vcm91dGVcIlxuXG5leHBvcnQgdHlwZSBSZXNvdXJjZU9wdGlvbnMgPSB7fFxuICBzaW5ndWxhcjogYm9vbGVhbixcbnx9XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNvdXJjZSh7c2luZ3VsYXJ9OiBSZXNvdXJjZU9wdGlvbnMgPSB7c2luZ3VsYXI6IGZhbHNlfSk6IERlY29yYXRvciB7XG4gIGNvbnN0IHNpbmdsZSA9IFtcbiAgICBbXCJzaG93XCIsIFwiR0VUXCIsIFwiL1wiXSxcbiAgICBbXCJjcmVhdGVcIiwgXCJQT1NUXCIsIFwiL1wiXSxcbiAgICBbXCJjcmVhdGVcIiwgXCJQVVRcIiwgXCIvXCJdLFxuICAgIFtcInVwZGF0ZVwiLCBcIlBBVENIXCIsIFwiL1wiXSxcbiAgICBbXCJkZXN0cm95XCIsIFwiREVMRVRFXCIsIFwiL1wiXSxcblxuICAgIFtcIm5ld1wiLCBcIkdFVFwiLCBcIi9uZXdcIl0sXG4gICAgW1wiZWRpdFwiLCBcIkdFVFwiLCBcIi9lZGl0XCJdLFxuICBdXG5cbiAgY29uc3QgcGx1cmFsID0gW1xuICAgIFtcImluZGV4XCIsIFwiR0VUXCIsIFwiL1wiXSxcbiAgICBbXCJzaG93XCIsIFwiR0VUXCIsIFwiL3tpZH1cIl0sXG4gICAgW1wiY3JlYXRlXCIsIFwiUE9TVFwiLCBcIi9cIl0sXG4gICAgW1wiY3JlYXRlXCIsIFwiUFVUXCIsIFwiL1wiXSxcbiAgICBbXCJ1cGRhdGVcIiwgXCJQQVRDSFwiLCBcIi97aWR9XCJdLFxuICAgIFtcImRlc3Ryb3lcIiwgXCJERUxFVEVcIiwgXCIve2lkfVwiXSxcblxuICAgIFtcIm5ld1wiLCBcIkdFVFwiLCBcIi9uZXdcIl0sXG4gICAgW1wiZWRpdFwiLCBcIkdFVFwiLCBcIi97aWR9L2VkaXRcIl0sXG4gIF1cblxuICBjb25zdCBtYXAgPSBzaW5ndWxhciA/IHNpbmdsZSA6IHBsdXJhbFxuXG4gIHJldHVybiAob2JqZWN0OiBPYmplY3QpID0+IHtcbiAgICBmb3IgKGNvbnN0IFtuYW1lLCBtZXRob2QsIHBhdHRlcm5dIG9mIG1hcCkge1xuICAgICAgbGV0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdC5wcm90b3R5cGUsIG5hbWUpXG4gICAgICBpZiAoZGVzY3JpcHRvcikge1xuICAgICAgICBjb25zdCBkZWNvcmF0ZSA9IHJvdXRlKHBhdHRlcm4sIHttZXRob2R9KVxuICAgICAgICBkZXNjcmlwdG9yID0gZGVjb3JhdGUob2JqZWN0LnByb3RvdHlwZSwgbmFtZSwgZGVzY3JpcHRvcilcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdC5wcm90b3R5cGUsIG5hbWUsIGRlc2NyaXB0b3IpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=