"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
let Context = exports.Context = class Context {

  constructor(app, stack, req, res) {
    this.body = "";
    this.data = {};

    this.app = app;
    this.stack = stack;

    this.request = req;
    this.response = res;

    Object.seal(this);
  }

  get(header) {
    return this.request.headers[header.toLowerCase()];
  }

  get method() {
    return this.request.method;
  }

  get url() {
    return this.request.url;
  }

  set(header, value) {
    this.response.setHeader(header.toLowerCase(), value);
  }

  set status(value) {
    if (value < 100 || value > 999) {
      throw new RangeError(`Invalid status code ${value}`);
    }

    this.response.statusCode = value;
  }

  get sent() {
    return this.response.headersSent;
  }

  inspect() {
    return {
      stack: this.stack,
      data: this.data,
      app: "<app>",
      req: "<node req>",
      res: "<node res>"
    };
  }
};
exports.default = Context;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb250ZXh0LmpzIl0sIm5hbWVzIjpbIkNvbnRleHQiLCJjb25zdHJ1Y3RvciIsImFwcCIsInN0YWNrIiwicmVxIiwicmVzIiwiYm9keSIsImRhdGEiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJPYmplY3QiLCJzZWFsIiwiZ2V0IiwiaGVhZGVyIiwiaGVhZGVycyIsInRvTG93ZXJDYXNlIiwibWV0aG9kIiwidXJsIiwic2V0IiwidmFsdWUiLCJzZXRIZWFkZXIiLCJzdGF0dXMiLCJSYW5nZUVycm9yIiwic3RhdHVzQ29kZSIsInNlbnQiLCJoZWFkZXJzU2VudCIsImluc3BlY3QiXSwibWFwcGluZ3MiOiI7Ozs7O0lBUWFBLE8sV0FBQUEsTyxHQUFOLE1BQU1BLE9BQU4sQ0FBYzs7QUFVbkJDLGNBQVlDLEdBQVosRUFBOEJDLEtBQTlCLEVBQTRDQyxHQUE1QyxFQUFrRUMsR0FBbEUsRUFBdUY7QUFBQSxTQUh2RkMsSUFHdUYsR0FIL0QsRUFHK0Q7QUFBQSxTQUZ2RkMsSUFFdUYsR0FGeEUsRUFFd0U7O0FBQ3JGLFNBQUtMLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjs7QUFFQSxTQUFLSyxPQUFMLEdBQWVKLEdBQWY7QUFDQSxTQUFLSyxRQUFMLEdBQWdCSixHQUFoQjs7QUFFQUssV0FBT0MsSUFBUCxDQUFZLElBQVo7QUFDRDs7QUFFREMsTUFBSUMsTUFBSixFQUFvQjtBQUNsQixXQUFPLEtBQUtMLE9BQUwsQ0FBYU0sT0FBYixDQUFxQkQsT0FBT0UsV0FBUCxFQUFyQixDQUFQO0FBQ0Q7O0FBRUQsTUFBSUMsTUFBSixHQUFxQjtBQUNuQixXQUFPLEtBQUtSLE9BQUwsQ0FBYVEsTUFBcEI7QUFDRDs7QUFFRCxNQUFJQyxHQUFKLEdBQWtCO0FBQ2hCLFdBQU8sS0FBS1QsT0FBTCxDQUFhUyxHQUFwQjtBQUNEOztBQUVEQyxNQUFJTCxNQUFKLEVBQW9CTSxLQUFwQixFQUFtQztBQUNqQyxTQUFLVixRQUFMLENBQWNXLFNBQWQsQ0FBd0JQLE9BQU9FLFdBQVAsRUFBeEIsRUFBOENJLEtBQTlDO0FBQ0Q7O0FBRUQsTUFBSUUsTUFBSixDQUFXRixLQUFYLEVBQTBCO0FBQ3hCLFFBQUlBLFFBQVEsR0FBUixJQUFlQSxRQUFRLEdBQTNCLEVBQWdDO0FBQzlCLFlBQU0sSUFBSUcsVUFBSixDQUFnQix1QkFBc0JILEtBQU0sRUFBNUMsQ0FBTjtBQUNEOztBQUVELFNBQUtWLFFBQUwsQ0FBY2MsVUFBZCxHQUEyQkosS0FBM0I7QUFDRDs7QUFFRCxNQUFJSyxJQUFKLEdBQW9CO0FBQ2xCLFdBQU8sS0FBS2YsUUFBTCxDQUFjZ0IsV0FBckI7QUFDRDs7QUFFREMsWUFBVTtBQUNSLFdBQU87QUFDTHZCLGFBQU8sS0FBS0EsS0FEUDtBQUVMSSxZQUFNLEtBQUtBLElBRk47QUFHTEwsV0FBSyxPQUhBO0FBSUxFLFdBQUssWUFKQTtBQUtMQyxXQUFLO0FBTEEsS0FBUDtBQU9EO0FBeERrQixDO2tCQTJETkwsTyIsImZpbGUiOiJjb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cbmltcG9ydCB0eXBlIHtTdGFja30gZnJvbSBcIi4vbWlkZGxld2FyZVwiXG5pbXBvcnQgdHlwZSB7QXBwbGljYXRpb259IGZyb20gXCIuL2FwcGxpY2F0aW9uXCJcbmltcG9ydCB0eXBlIHtJbmNvbWluZ01lc3NhZ2UsIFNlcnZlclJlc3BvbnNlfSBmcm9tIFwiaHR0cFwiXG5cbmV4cG9ydCB0eXBlIFJlcXVlc3QgPSBJbmNvbWluZ01lc3NhZ2VcbmV4cG9ydCB0eXBlIFJlc3BvbnNlID0gU2VydmVyUmVzcG9uc2VcblxuZXhwb3J0IGNsYXNzIENvbnRleHQge1xuICBhcHA6IEFwcGxpY2F0aW9uXG4gIHN0YWNrOiBTdGFja1xuXG4gIHJlcXVlc3Q6IFJlcXVlc3RcbiAgcmVzcG9uc2U6IFJlc3BvbnNlXG5cbiAgYm9keTogT2JqZWN0IHwgc3RyaW5nID0gXCJcIlxuICBkYXRhOiBPYmplY3QgPSB7fVxuXG4gIGNvbnN0cnVjdG9yKGFwcDogQXBwbGljYXRpb24sIHN0YWNrOiBTdGFjaywgcmVxOiBJbmNvbWluZ01lc3NhZ2UsIHJlczogU2VydmVyUmVzcG9uc2UpIHtcbiAgICB0aGlzLmFwcCA9IGFwcFxuICAgIHRoaXMuc3RhY2sgPSBzdGFja1xuXG4gICAgdGhpcy5yZXF1ZXN0ID0gcmVxXG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc1xuXG4gICAgT2JqZWN0LnNlYWwodGhpcylcbiAgfVxuXG4gIGdldChoZWFkZXI6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QuaGVhZGVyc1toZWFkZXIudG9Mb3dlckNhc2UoKV1cbiAgfVxuXG4gIGdldCBtZXRob2QoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0Lm1ldGhvZFxuICB9XG5cbiAgZ2V0IHVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QudXJsXG4gIH1cblxuICBzZXQoaGVhZGVyOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLnJlc3BvbnNlLnNldEhlYWRlcihoZWFkZXIudG9Mb3dlckNhc2UoKSwgdmFsdWUpXG4gIH1cblxuICBzZXQgc3RhdHVzKHZhbHVlOiBudW1iZXIpIHtcbiAgICBpZiAodmFsdWUgPCAxMDAgfHwgdmFsdWUgPiA5OTkpIHtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGBJbnZhbGlkIHN0YXR1cyBjb2RlICR7dmFsdWV9YClcbiAgICB9XG5cbiAgICB0aGlzLnJlc3BvbnNlLnN0YXR1c0NvZGUgPSB2YWx1ZVxuICB9XG5cbiAgZ2V0IHNlbnQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucmVzcG9uc2UuaGVhZGVyc1NlbnRcbiAgfVxuXG4gIGluc3BlY3QoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgZGF0YTogdGhpcy5kYXRhLFxuICAgICAgYXBwOiBcIjxhcHA+XCIsXG4gICAgICByZXE6IFwiPG5vZGUgcmVxPlwiLFxuICAgICAgcmVzOiBcIjxub2RlIHJlcz5cIixcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29udGV4dFxuIl19