"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
let Context = exports.Context = class Context {

  constructor(app, stack, req, res) {
    this.body = "";
    this.data = {};

    this.app = app;
    this.stack = stack;

    this.request = req;
    this.response = res;

    Object.seal(this);
  }

  get(header) {
    return this.request.headers[header.toLowerCase()];
  }

  get method() {
    return this.request.method;
  }

  get url() {
    return this.request.url;
  }

  set(header, value) {
    this.response.setHeader(header, value);
  }

  set status(value) {
    if (value < 100 || value > 999) {
      throw new RangeError(`Invalid status code ${value}`);
    }

    this.response.statusCode = value;
  }

  get sent() {
    return this.response.headersSent;
  }

  inspect() {
    return {
      stack: this.stack,
      data: this.data,
      app: "<app>",
      req: "<node req>",
      res: "<node res>"
    };
  }
};
exports.default = Context;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb250ZXh0LmpzIl0sIm5hbWVzIjpbIkNvbnRleHQiLCJjb25zdHJ1Y3RvciIsImFwcCIsInN0YWNrIiwicmVxIiwicmVzIiwiYm9keSIsImRhdGEiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJPYmplY3QiLCJzZWFsIiwiZ2V0IiwiaGVhZGVyIiwiaGVhZGVycyIsInRvTG93ZXJDYXNlIiwibWV0aG9kIiwidXJsIiwic2V0IiwidmFsdWUiLCJzZXRIZWFkZXIiLCJzdGF0dXMiLCJSYW5nZUVycm9yIiwic3RhdHVzQ29kZSIsInNlbnQiLCJoZWFkZXJzU2VudCIsImluc3BlY3QiXSwibWFwcGluZ3MiOiI7Ozs7O0lBUWFBLE8sV0FBQUEsTyxHQUFOLE1BQU1BLE9BQU4sQ0FBYzs7QUFVbkJDLGNBQVlDLEdBQVosRUFBOEJDLEtBQTlCLEVBQTRDQyxHQUE1QyxFQUFrRUMsR0FBbEUsRUFBdUY7QUFBQSxTQUh2RkMsSUFHdUYsR0FIL0QsRUFHK0Q7QUFBQSxTQUZ2RkMsSUFFdUYsR0FGeEUsRUFFd0U7O0FBQ3JGLFNBQUtMLEdBQUwsR0FBV0EsR0FBWDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjs7QUFFQSxTQUFLSyxPQUFMLEdBQWVKLEdBQWY7QUFDQSxTQUFLSyxRQUFMLEdBQWdCSixHQUFoQjs7QUFFQUssV0FBT0MsSUFBUCxDQUFZLElBQVo7QUFDRDs7QUFFREMsTUFBSUMsTUFBSixFQUFvQjtBQUNsQixXQUFPLEtBQUtMLE9BQUwsQ0FBYU0sT0FBYixDQUFxQkQsT0FBT0UsV0FBUCxFQUFyQixDQUFQO0FBQ0Q7O0FBRUQsTUFBSUMsTUFBSixHQUFxQjtBQUNuQixXQUFPLEtBQUtSLE9BQUwsQ0FBYVEsTUFBcEI7QUFDRDs7QUFFRCxNQUFJQyxHQUFKLEdBQWtCO0FBQ2hCLFdBQU8sS0FBS1QsT0FBTCxDQUFhUyxHQUFwQjtBQUNEOztBQUVEQyxNQUFJTCxNQUFKLEVBQW9CTSxLQUFwQixFQUFtQztBQUNqQyxTQUFLVixRQUFMLENBQWNXLFNBQWQsQ0FBd0JQLE1BQXhCLEVBQWdDTSxLQUFoQztBQUNEOztBQUVELE1BQUlFLE1BQUosQ0FBV0YsS0FBWCxFQUEwQjtBQUN4QixRQUFJQSxRQUFRLEdBQVIsSUFBZUEsUUFBUSxHQUEzQixFQUFnQztBQUM5QixZQUFNLElBQUlHLFVBQUosQ0FBZ0IsdUJBQXNCSCxLQUFNLEVBQTVDLENBQU47QUFDRDs7QUFFRCxTQUFLVixRQUFMLENBQWNjLFVBQWQsR0FBMkJKLEtBQTNCO0FBQ0Q7O0FBRUQsTUFBSUssSUFBSixHQUFvQjtBQUNsQixXQUFPLEtBQUtmLFFBQUwsQ0FBY2dCLFdBQXJCO0FBQ0Q7O0FBRURDLFlBQVU7QUFDUixXQUFPO0FBQ0x2QixhQUFPLEtBQUtBLEtBRFA7QUFFTEksWUFBTSxLQUFLQSxJQUZOO0FBR0xMLFdBQUssT0FIQTtBQUlMRSxXQUFLLFlBSkE7QUFLTEMsV0FBSztBQUxBLEtBQVA7QUFPRDtBQXhEa0IsQztrQkEyRE5MLE8iLCJmaWxlIjoiY29udGV4dC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG5pbXBvcnQgdHlwZSB7U3RhY2t9IGZyb20gXCIuL21pZGRsZXdhcmVcIlxuaW1wb3J0IHR5cGUge0FwcGxpY2F0aW9ufSBmcm9tIFwiLi9hcHBsaWNhdGlvblwiXG5pbXBvcnQgdHlwZSB7SW5jb21pbmdNZXNzYWdlLCBTZXJ2ZXJSZXNwb25zZX0gZnJvbSBcImh0dHBcIlxuXG5leHBvcnQgdHlwZSBSZXF1ZXN0ID0gSW5jb21pbmdNZXNzYWdlXG5leHBvcnQgdHlwZSBSZXNwb25zZSA9IFNlcnZlclJlc3BvbnNlXG5cbmV4cG9ydCBjbGFzcyBDb250ZXh0IHtcbiAgYXBwOiBBcHBsaWNhdGlvblxuICBzdGFjazogU3RhY2tcblxuICByZXF1ZXN0OiBSZXF1ZXN0XG4gIHJlc3BvbnNlOiBSZXNwb25zZVxuXG4gIGJvZHk6IE9iamVjdCB8IHN0cmluZyA9IFwiXCJcbiAgZGF0YTogT2JqZWN0ID0ge31cblxuICBjb25zdHJ1Y3RvcihhcHA6IEFwcGxpY2F0aW9uLCBzdGFjazogU3RhY2ssIHJlcTogSW5jb21pbmdNZXNzYWdlLCByZXM6IFNlcnZlclJlc3BvbnNlKSB7XG4gICAgdGhpcy5hcHAgPSBhcHBcbiAgICB0aGlzLnN0YWNrID0gc3RhY2tcblxuICAgIHRoaXMucmVxdWVzdCA9IHJlcVxuICAgIHRoaXMucmVzcG9uc2UgPSByZXNcblxuICAgIE9iamVjdC5zZWFsKHRoaXMpXG4gIH1cblxuICBnZXQoaGVhZGVyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0LmhlYWRlcnNbaGVhZGVyLnRvTG93ZXJDYXNlKCldXG4gIH1cblxuICBnZXQgbWV0aG9kKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdC5tZXRob2RcbiAgfVxuXG4gIGdldCB1cmwoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0LnVybFxuICB9XG5cbiAgc2V0KGhlYWRlcjogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5yZXNwb25zZS5zZXRIZWFkZXIoaGVhZGVyLCB2YWx1ZSlcbiAgfVxuXG4gIHNldCBzdGF0dXModmFsdWU6IG51bWJlcikge1xuICAgIGlmICh2YWx1ZSA8IDEwMCB8fCB2YWx1ZSA+IDk5OSkge1xuICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoYEludmFsaWQgc3RhdHVzIGNvZGUgJHt2YWx1ZX1gKVxuICAgIH1cblxuICAgIHRoaXMucmVzcG9uc2Uuc3RhdHVzQ29kZSA9IHZhbHVlXG4gIH1cblxuICBnZXQgc2VudCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5yZXNwb25zZS5oZWFkZXJzU2VudFxuICB9XG5cbiAgaW5zcGVjdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICBkYXRhOiB0aGlzLmRhdGEsXG4gICAgICBhcHA6IFwiPGFwcD5cIixcbiAgICAgIHJlcTogXCI8bm9kZSByZXE+XCIsXG4gICAgICByZXM6IFwiPG5vZGUgcmVzPlwiLFxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb250ZXh0XG4iXX0=