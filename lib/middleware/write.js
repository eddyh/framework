"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = write;

var _stream = require("stream");

function write() {
  return async function write(next) {
    this;

    await next();

    Object.freeze(this);

    if (this.sent) return;

    if (this.body === null) {
      this.response.end();
    } else if (this.body instanceof Buffer) {
      this.response.end(this.body);
    } else if (this.body instanceof _stream.Readable) {
      this.body.pipe(this.response);
    } else if (typeof this.body === "string") {
      this.response.end(this.body, "utf8");
    } else {
      /* Treat as JSON. */
      this.set("Content-Type", "application/json");
      this.response.end(JSON.stringify(this.body), "utf8");
    }
  };
}
/* eslint-disable no-unused-expressions */
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL3dyaXRlLmpzIl0sIm5hbWVzIjpbIndyaXRlIiwibmV4dCIsIk9iamVjdCIsImZyZWV6ZSIsInNlbnQiLCJib2R5IiwicmVzcG9uc2UiLCJlbmQiLCJCdWZmZXIiLCJSZWFkYWJsZSIsInBpcGUiLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOzs7OztrQkFNd0JBLEs7O0FBSnhCOztBQUllLFNBQVNBLEtBQVQsR0FBNkI7QUFDMUMsU0FBTyxlQUFlQSxLQUFmLENBQXFCQyxJQUFyQixFQUFpQztBQUNyQyxRQUFEOztBQUVBLFVBQU1BLE1BQU47O0FBRUFDLFdBQU9DLE1BQVAsQ0FBYyxJQUFkOztBQUVBLFFBQUksS0FBS0MsSUFBVCxFQUFlOztBQUVmLFFBQUksS0FBS0MsSUFBTCxLQUFjLElBQWxCLEVBQXdCO0FBQ3RCLFdBQUtDLFFBQUwsQ0FBY0MsR0FBZDtBQUNELEtBRkQsTUFFTyxJQUFJLEtBQUtGLElBQUwsWUFBcUJHLE1BQXpCLEVBQWlDO0FBQ3RDLFdBQUtGLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQixLQUFLRixJQUF2QjtBQUNELEtBRk0sTUFFQSxJQUFJLEtBQUtBLElBQUwsWUFBcUJJLGdCQUF6QixFQUFtQztBQUN4QyxXQUFLSixJQUFMLENBQVVLLElBQVYsQ0FBZSxLQUFLSixRQUFwQjtBQUNELEtBRk0sTUFFQSxJQUFJLE9BQU8sS0FBS0QsSUFBWixLQUFxQixRQUF6QixFQUFtQztBQUN4QyxXQUFLQyxRQUFMLENBQWNDLEdBQWQsQ0FBa0IsS0FBS0YsSUFBdkIsRUFBNkIsTUFBN0I7QUFDRCxLQUZNLE1BRUE7QUFDTDtBQUNBLFdBQUtNLEdBQUwsQ0FBUyxjQUFULEVBQXlCLGtCQUF6QjtBQUNBLFdBQUtMLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQkssS0FBS0MsU0FBTCxDQUFlLEtBQUtSLElBQXBCLENBQWxCLEVBQTZDLE1BQTdDO0FBQ0Q7QUFDRixHQXRCRDtBQXVCRDtBQTdCRCIsImZpbGUiOiJ3cml0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtZXhwcmVzc2lvbnMgKi9cbmltcG9ydCB7UmVhZGFibGV9IGZyb20gXCJzdHJlYW1cIlxuXG5pbXBvcnQgdHlwZSB7Q29udGV4dCwgTmV4dCwgTWlkZGxld2FyZX0gZnJvbSBcIi4uL21pZGRsZXdhcmVcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3cml0ZSgpOiBNaWRkbGV3YXJlIHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIHdyaXRlKG5leHQ6IE5leHQpIHtcbiAgICAodGhpczogQ29udGV4dClcblxuICAgIGF3YWl0IG5leHQoKVxuXG4gICAgT2JqZWN0LmZyZWV6ZSh0aGlzKVxuXG4gICAgaWYgKHRoaXMuc2VudCkgcmV0dXJuXG5cbiAgICBpZiAodGhpcy5ib2R5ID09PSBudWxsKSB7XG4gICAgICB0aGlzLnJlc3BvbnNlLmVuZCgpXG4gICAgfSBlbHNlIGlmICh0aGlzLmJvZHkgaW5zdGFuY2VvZiBCdWZmZXIpIHtcbiAgICAgIHRoaXMucmVzcG9uc2UuZW5kKHRoaXMuYm9keSlcbiAgICB9IGVsc2UgaWYgKHRoaXMuYm9keSBpbnN0YW5jZW9mIFJlYWRhYmxlKSB7XG4gICAgICB0aGlzLmJvZHkucGlwZSh0aGlzLnJlc3BvbnNlKVxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoaXMuYm9keSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgdGhpcy5yZXNwb25zZS5lbmQodGhpcy5ib2R5LCBcInV0ZjhcIilcbiAgICB9IGVsc2Uge1xuICAgICAgLyogVHJlYXQgYXMgSlNPTi4gKi9cbiAgICAgIHRoaXMuc2V0KFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiKVxuICAgICAgdGhpcy5yZXNwb25zZS5lbmQoSlNPTi5zdHJpbmdpZnkodGhpcy5ib2R5KSwgXCJ1dGY4XCIpXG4gICAgfVxuICB9XG59XG4iXX0=