"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = requireAuthorization;

var _crypto = require("crypto");

var _errors = require("../errors");

/* eslint-disable no-unused-expressions */
function requireAuthorization(realm, credentials) {
  return function requireAuthorization(next) {
    this;

    const { username, password } = this.data;
    if (username) {
      const expected = credentials[username];
      if (safeEqual(password, expected)) {
        return next();
      }
    }

    this.set("WWW-Authenticate", `Basic realm="${realm}"`);
    throw new _errors.Unauthorized();
  };
}

function safeEqual(a, b) {
  return a !== undefined && b !== undefined && a.length === b.length && (0, _crypto.timingSafeEqual)(Buffer.from(a), Buffer.from(b));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL3JlcXVpcmUtYXV0aG9yaXphdGlvbi5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlQXV0aG9yaXphdGlvbiIsInJlYWxtIiwiY3JlZGVudGlhbHMiLCJuZXh0IiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImRhdGEiLCJleHBlY3RlZCIsInNhZmVFcXVhbCIsInNldCIsImEiLCJiIiwidW5kZWZpbmVkIiwibGVuZ3RoIiwiQnVmZmVyIiwiZnJvbSJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBT3dCQSxvQjs7QUFMeEI7O0FBR0E7O0FBSkE7QUFNZSxTQUFTQSxvQkFBVCxDQUE4QkMsS0FBOUIsRUFBNkNDLFdBQTdDLEVBQW9HO0FBQ2pILFNBQU8sU0FBU0Ysb0JBQVQsQ0FBOEJHLElBQTlCLEVBQTBDO0FBQzlDLFFBQUQ7O0FBRUEsVUFBTSxFQUFDQyxRQUFELEVBQVdDLFFBQVgsS0FBdUIsS0FBS0MsSUFBbEM7QUFDQSxRQUFJRixRQUFKLEVBQWM7QUFDWixZQUFNRyxXQUFXTCxZQUFZRSxRQUFaLENBQWpCO0FBQ0EsVUFBSUksVUFBVUgsUUFBVixFQUFvQkUsUUFBcEIsQ0FBSixFQUFtQztBQUNqQyxlQUFPSixNQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFLTSxHQUFMLENBQVMsa0JBQVQsRUFBOEIsZ0JBQWVSLEtBQU0sR0FBbkQ7QUFDQSxVQUFNLDBCQUFOO0FBQ0QsR0FiRDtBQWNEOztBQUVELFNBQVNPLFNBQVQsQ0FBbUJFLENBQW5CLEVBQXFDQyxDQUFyQyxFQUFnRTtBQUM5RCxTQUFPRCxNQUFNRSxTQUFOLElBQW1CRCxNQUFNQyxTQUF6QixJQUFzQ0YsRUFBRUcsTUFBRixLQUFhRixFQUFFRSxNQUFyRCxJQUNMLDZCQUFnQkMsT0FBT0MsSUFBUCxDQUFZTCxDQUFaLENBQWhCLEVBQWdDSSxPQUFPQyxJQUFQLENBQVlKLENBQVosQ0FBaEMsQ0FERjtBQUVEIiwiZmlsZSI6InJlcXVpcmUtYXV0aG9yaXphdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtZXhwcmVzc2lvbnMgKi9cbmltcG9ydCB7dGltaW5nU2FmZUVxdWFsfSBmcm9tIFwiY3J5cHRvXCJcbmltcG9ydCB0eXBlIHtDb250ZXh0LCBOZXh0LCBNaWRkbGV3YXJlfSBmcm9tIFwiLi4vbWlkZGxld2FyZVwiXG5cbmltcG9ydCB7VW5hdXRob3JpemVkfSBmcm9tIFwiLi4vZXJyb3JzXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVxdWlyZUF1dGhvcml6YXRpb24ocmVhbG06IHN0cmluZywgY3JlZGVudGlhbHM6IHtbdXNlcm5hbWU6IHN0cmluZ106IHN0cmluZ30pOiBNaWRkbGV3YXJlIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVpcmVBdXRob3JpemF0aW9uKG5leHQ6IE5leHQpIHtcbiAgICAodGhpczogQ29udGV4dClcblxuICAgIGNvbnN0IHt1c2VybmFtZSwgcGFzc3dvcmR9ID0gdGhpcy5kYXRhXG4gICAgaWYgKHVzZXJuYW1lKSB7XG4gICAgICBjb25zdCBleHBlY3RlZCA9IGNyZWRlbnRpYWxzW3VzZXJuYW1lXVxuICAgICAgaWYgKHNhZmVFcXVhbChwYXNzd29yZCwgZXhwZWN0ZWQpKSB7XG4gICAgICAgIHJldHVybiBuZXh0KClcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnNldChcIldXVy1BdXRoZW50aWNhdGVcIiwgYEJhc2ljIHJlYWxtPVwiJHtyZWFsbX1cImApXG4gICAgdGhyb3cgbmV3IFVuYXV0aG9yaXplZFxuICB9XG59XG5cbmZ1bmN0aW9uIHNhZmVFcXVhbChhOiBzdHJpbmcgfCB2b2lkLCBiOiBzdHJpbmcgfCB2b2lkKTogYm9vbGVhbiB7XG4gIHJldHVybiBhICE9PSB1bmRlZmluZWQgJiYgYiAhPT0gdW5kZWZpbmVkICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJlxuICAgIHRpbWluZ1NhZmVFcXVhbChCdWZmZXIuZnJvbShhKSwgQnVmZmVyLmZyb20oYikpXG59XG4iXX0=