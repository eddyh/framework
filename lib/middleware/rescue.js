"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rescue;

var _errors = require("../errors");

function rescue() {
  return async function rescue(next) {
    this;

    this.response.on("pipe", stream => {
      stream.on("error", err => {
        stream.unpipe();

        // ES7 this::error(err)
        error.call(this, err);
      });
    });

    try {
      await next();
    } catch (err) {
      // ES7 this::error(err)
      return error.call(this, err);
    }
  };
}
/* eslint-disable no-unused-expressions */


function error(err) {
  this;

  this.data.error = err;

  if (!err.expose) {
    if (process.env.NODE_ENV === "test") throw err;
    err = new _errors.InternalServerError();
  }

  if (this.sent) {
    if (!this.finished) this.response.end();
    return;
  }

  this.set("Content-Type", "application/json");

  this.status = err.status || 500;
  this.response.end(JSON.stringify(err), "utf8");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlL3Jlc2N1ZS5qcyJdLCJuYW1lcyI6WyJyZXNjdWUiLCJuZXh0IiwicmVzcG9uc2UiLCJvbiIsInN0cmVhbSIsImVyciIsInVucGlwZSIsImVycm9yIiwiY2FsbCIsImRhdGEiLCJleHBvc2UiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJJbnRlcm5hbFNlcnZlckVycm9yIiwic2VudCIsImZpbmlzaGVkIiwiZW5kIiwic2V0Iiwic3RhdHVzIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBTXdCQSxNOztBQUp4Qjs7QUFJZSxTQUFTQSxNQUFULEdBQThCO0FBQzNDLFNBQU8sZUFBZUEsTUFBZixDQUFzQkMsSUFBdEIsRUFBa0M7QUFDdEMsUUFBRDs7QUFFQSxTQUFLQyxRQUFMLENBQWNDLEVBQWQsQ0FBaUIsTUFBakIsRUFBeUJDLFVBQVU7QUFDakNBLGFBQU9ELEVBQVAsQ0FBVSxPQUFWLEVBQW1CRSxPQUFPO0FBQ3hCRCxlQUFPRSxNQUFQOztBQUVBO0FBQ0FDLGNBQU1DLElBQU4sQ0FBVyxJQUFYLEVBQWlCSCxHQUFqQjtBQUNELE9BTEQ7QUFNRCxLQVBEOztBQVNBLFFBQUk7QUFDRixZQUFNSixNQUFOO0FBQ0QsS0FGRCxDQUVFLE9BQU9JLEdBQVAsRUFBWTtBQUNaO0FBQ0EsYUFBT0UsTUFBTUMsSUFBTixDQUFXLElBQVgsRUFBaUJILEdBQWpCLENBQVA7QUFDRDtBQUNGLEdBbEJEO0FBbUJEO0FBekJEOzs7QUEyQkEsU0FBU0UsS0FBVCxDQUFlRixHQUFmLEVBQTJCO0FBQ3hCLE1BQUQ7O0FBRUEsT0FBS0ksSUFBTCxDQUFVRixLQUFWLEdBQWtCRixHQUFsQjs7QUFFQSxNQUFJLENBQUVBLEdBQUQsQ0FBV0ssTUFBaEIsRUFBd0I7QUFDdEIsUUFBSUMsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLE1BQTdCLEVBQXFDLE1BQU1SLEdBQU47QUFDckNBLFVBQU0sSUFBSVMsMkJBQUosRUFBTjtBQUNEOztBQUVELE1BQUksS0FBS0MsSUFBVCxFQUFlO0FBQ2IsUUFBSSxDQUFDLEtBQUtDLFFBQVYsRUFBb0IsS0FBS2QsUUFBTCxDQUFjZSxHQUFkO0FBQ3BCO0FBQ0Q7O0FBRUQsT0FBS0MsR0FBTCxDQUFTLGNBQVQsRUFBeUIsa0JBQXpCOztBQUVBLE9BQUtDLE1BQUwsR0FBZWQsR0FBRCxDQUFXYyxNQUFYLElBQXFCLEdBQW5DO0FBQ0EsT0FBS2pCLFFBQUwsQ0FBY2UsR0FBZCxDQUFrQkcsS0FBS0MsU0FBTCxDQUFlaEIsR0FBZixDQUFsQixFQUF1QyxNQUF2QztBQUNEIiwiZmlsZSI6InJlc2N1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtZXhwcmVzc2lvbnMgKi9cbmltcG9ydCB7SW50ZXJuYWxTZXJ2ZXJFcnJvcn0gZnJvbSBcIi4uL2Vycm9yc1wiXG5cbmltcG9ydCB0eXBlIHtDb250ZXh0LCBOZXh0LCBNaWRkbGV3YXJlfSBmcm9tIFwiLi4vbWlkZGxld2FyZVwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlc2N1ZSgpOiBNaWRkbGV3YXJlIHtcbiAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uIHJlc2N1ZShuZXh0OiBOZXh0KSB7XG4gICAgKHRoaXM6IENvbnRleHQpXG5cbiAgICB0aGlzLnJlc3BvbnNlLm9uKFwicGlwZVwiLCBzdHJlYW0gPT4ge1xuICAgICAgc3RyZWFtLm9uKFwiZXJyb3JcIiwgZXJyID0+IHtcbiAgICAgICAgc3RyZWFtLnVucGlwZSgpXG5cbiAgICAgICAgLy8gRVM3IHRoaXM6OmVycm9yKGVycilcbiAgICAgICAgZXJyb3IuY2FsbCh0aGlzLCBlcnIpXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgbmV4dCgpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAvLyBFUzcgdGhpczo6ZXJyb3IoZXJyKVxuICAgICAgcmV0dXJuIGVycm9yLmNhbGwodGhpcywgZXJyKVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBlcnJvcihlcnI6IEVycm9yKSB7XG4gICh0aGlzOiBDb250ZXh0KVxuXG4gIHRoaXMuZGF0YS5lcnJvciA9IGVyclxuXG4gIGlmICghKGVycjogYW55KS5leHBvc2UpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiKSB0aHJvdyBlcnJcbiAgICBlcnIgPSBuZXcgSW50ZXJuYWxTZXJ2ZXJFcnJvclxuICB9XG5cbiAgaWYgKHRoaXMuc2VudCkge1xuICAgIGlmICghdGhpcy5maW5pc2hlZCkgdGhpcy5yZXNwb25zZS5lbmQoKVxuICAgIHJldHVyblxuICB9XG5cbiAgdGhpcy5zZXQoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpXG5cbiAgdGhpcy5zdGF0dXMgPSAoZXJyOiBhbnkpLnN0YXR1cyB8fCA1MDBcbiAgdGhpcy5yZXNwb25zZS5lbmQoSlNPTi5zdHJpbmdpZnkoZXJyKSwgXCJ1dGY4XCIpXG59XG4iXX0=